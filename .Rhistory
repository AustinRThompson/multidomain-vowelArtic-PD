group=c(1,2,3,4,5,6)),
color = "black",
tip_length = 0,
manual = T) +
# Facet by Sex
facet_grid(~Sex) +
# Changing the y axis scale
coord_cartesian(ylim = c(0,130)) +
scale_y_continuous(breaks=c(0, 25, 50, 75, 100)) +
# Changing the theme, labels, and title
theme_minimal() +
labs(y = "VAS Rating") +
ggtitle("Intelligibility") +
theme(
aspect.ratio = 1,
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
) +
# Color Palate
scale_color_manual(values = c(color_HC,color_PD)) +
scale_fill_manual(values = c(color_HC,color_PD))
plot_Int
# Making the Plot
plot_Int <- plot_Int_data %>%
ggplot() +
aes(y = M,
x = condition) +
# Line
geom_line(
aes(color = Group,
group = Group),
alpha = .6,
) +
# Error Bars
geom_errorbar(aes(
ymin = lower,
ymax = upper,
color = Group,
group = Group
),
width = .1,
) +
# Point
geom_point(
aes(color = Group,
group = Group),
) +
# Adding significance bars - HC*Condition ----
ggsignif::geom_signif(data = data.frame(Group = c("Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(113, 113, 113, 113, 113, 113),
xmin = c(1.1, 2.1, NA, 1.1, 2.1, NA),
xmax = c(1.9, 2.9, NA, 1.9, 2.9, NA),
annotations = c("*", "*", NA, "*", "*", NA),
group=c(1,2,3,4,5,6)),
vjust = .4,
color = color_HC,
tip_length = 0,
manual = T) +
# Adding significance bars - PD*Condition ----
ggsignif::geom_signif(data = data.frame(Group = c("Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(123, 123, 123, 123, 123, 123),
xmin = c(1.1, 2.1, NA, 1.1, 2.1, NA),
xmax = c(1.9, 2.9, NA, 1.9, 2.9, NA),
annotations = c("*", "*", NA, "*", "*", NA),
group=c(1,2,3,4,5,6)),
color = color_PD,
tip_length = 0,
manual = T) +
# Adding significance bars - Group ----
ggsignif::geom_signif(data = data.frame(Group = c("Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(100, 100, 100, 100, 100, 100),
xmin = c(.9, 1.9, 2.9, NA, NA, NA),
xmax = c(1.1, 2.1, 3.1, NA, NA, NA),
annotations = c("*", "*", "*", NA, NA, NA),
group=c(1,2,3,4,5,6)),
color = "black",
tip_length = 0,
manual = T) +
# Facet by Sex
facet_grid(~Sex) +
# Changing the y axis scale
coord_cartesian(ylim = c(0,130)) +
scale_y_continuous(breaks=c(0, 25, 50, 75, 100)) +
# Changing the theme, labels, and title
theme_minimal() +
labs(y = "VAS Rating") +
ggtitle("Intelligibility") +
theme(
aspect.ratio = 1,
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
) +
# Color Palate
scale_color_manual(values = c(color_HC,color_PD)) +
scale_fill_manual(values = c(color_HC,color_PD))
plot_Int
# Making the Plot
plot_Int <- plot_Int_data %>%
ggplot() +
aes(y = M,
x = condition) +
# Line
geom_line(
aes(color = Group,
group = Group),
alpha = .6,
) +
# Error Bars
geom_errorbar(aes(
ymin = lower,
ymax = upper,
color = Group,
group = Group
),
width = .1,
) +
# Point
geom_point(
aes(color = Group,
group = Group),
) +
# Adding significance bars - HC*Condition ----
ggsignif::geom_signif(data = data.frame(Group = c("Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(113, 113, 113, 113, 113, 113),
xmin = c(1.1, 2.1, NA, 1.1, 2.1, NA),
xmax = c(1.9, 2.9, NA, 1.9, 2.9, NA),
annotations = c("*", "*", NA, "*", "*", NA),
group=c(1,2,3,4,5,6)),
vjust = .5,
color = color_HC,
tip_length = 0,
manual = T) +
# Adding significance bars - PD*Condition ----
ggsignif::geom_signif(data = data.frame(Group = c("Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(123, 123, 123, 123, 123, 123),
xmin = c(1.1, 2.1, NA, 1.1, 2.1, NA),
xmax = c(1.9, 2.9, NA, 1.9, 2.9, NA),
annotations = c("*", "*", NA, "*", "*", NA),
group=c(1,2,3,4,5,6)),
vjust = .5,
color = color_PD,
tip_length = 0,
manual = T) +
# Adding significance bars - Group ----
ggsignif::geom_signif(data = data.frame(Group = c("Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(100, 100, 100, 100, 100, 100),
xmin = c(.9, 1.9, 2.9, NA, NA, NA),
xmax = c(1.1, 2.1, 3.1, NA, NA, NA),
annotations = c("*", "*", "*", NA, NA, NA),
group=c(1,2,3,4,5,6)),
vjust = .5,
color = "black",
tip_length = 0,
manual = T) +
# Facet by Sex
facet_grid(~Sex) +
# Changing the y axis scale
coord_cartesian(ylim = c(0,130)) +
scale_y_continuous(breaks=c(0, 25, 50, 75, 100)) +
# Changing the theme, labels, and title
theme_minimal() +
labs(y = "VAS Rating") +
ggtitle("Intelligibility") +
theme(
aspect.ratio = 1,
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
) +
# Color Palate
scale_color_manual(values = c(color_HC,color_PD)) +
scale_fill_manual(values = c(color_HC,color_PD))
plot_Int
# Perceptual Plots
plot_s2_perceptual <- ggarrange(plot_Int,plot_AP,
common.legend = T,
legend = "bottom")
plot_s2_perceptual
dir.create(path = "Data/Plots/Results",
showWarnings = F)
ggsave(filename = "Results_perceptual.png",
plot = plot_s2_perceptual,
path = "Data/Plots/Results",
height = 2.5,
width = 7,
scale = 1.1,
bg = "white")
# Making the Plot
plot_AP <- plot_AP_data %>%
ggplot() +
aes(y = M,
x = condition) +
# Line
geom_line(
aes(color = Group,
group = Group),
alpha = .6,
) +
# Error Bars
geom_errorbar(aes(
ymin = lower,
ymax = upper,
color = Group,
group = Group
),
width = .1,
) +
# Point
geom_point(
aes(color = Group,
group = Group),
) +
# Adding significance bars - HC*Condition ----
ggsignif::geom_signif(data = data.frame(Group = c("Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(113, 113, 113, 113, 113, 113),
xmin = c(1.1, 2.1, NA, 1.1, NA, NA),
xmax = c(1.9, 2.9, NA, 1.9, NA, NA),
annotations = c("*", "*", NA, "*", NA, NA),
group=c(1,2,3,4,5,6)),
vjust = .5,
color = color_HC,
tip_length = 0,
manual = T) +
# Adding significance bars - PD*Condition ----
ggsignif::geom_signif(data = data.frame(Group = c("Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(123, 123, 123, 123, 123, 123),
xmin = c(1.1, 2.1, NA, 1.1, 2.1, NA),
xmax = c(1.9, 2.9, NA, 1.9, 2.9, NA),
annotations = c("*", "*", NA, "*", "*", NA),
group=c(1,2,3,4,5,6)),
vjust = .5,
color = color_PD,
tip_length = 0,
manual = T) +
# Adding significance bars - Group ----
ggsignif::geom_signif(data = data.frame(Group = c("Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(100, 100, 100, 100, 100, 100),
xmin = c(.9, 1.9, 2.9, NA, NA, NA),
xmax = c(1.1, 2.1, 3.1, NA, NA, NA),
annotations = c("*", "*", "*", NA, NA, NA),
group=c(1,2,3,4,5,6)),
vjust = .5,
color = "black",
tip_length = 0,
manual = T) +
# Facet by Sex
facet_grid(~Sex) +
# Changing the y axis scale
coord_cartesian(ylim = c(0,130)) +
scale_y_continuous(breaks=c(0, 25, 50, 75, 100)) +
# Changing the theme, labels, and title
theme_minimal() +
labs(y = "VAS Rating") +
ggtitle("Articulatory Precision") +
theme(
aspect.ratio = 1,
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
) +
# Color Palate
scale_color_manual(values = c(color_HC,color_PD)) +
scale_fill_manual(values = c(color_HC,color_PD))
plot_AP
# Perceptual Plots
plot_s2_perceptual <- ggarrange(plot_Int,plot_AP,
common.legend = T,
legend = "bottom")
plot_s2_perceptual
dir.create(path = "Data/Plots/Results",
showWarnings = F)
ggsave(filename = "Results_perceptual.png",
plot = plot_s2_perceptual,
path = "Data/Plots/Results",
height = 2.5,
width = 7,
scale = 1.1,
bg = "white")
# APA Reporting
apa_s1_emmPairs(pairs(emms_group),
sex = "M",
Condition = "conv")
# Compute EMMs for Group and Sex
emms_group <- emmeans(Int_finalModel, ~ Group | Sex*condition)
# APA Reporting
apa_s1_emmPairs(pairs(emms_group),
sex = "M",
Condition = "conv")
apa_lmResults <- function(model, fixedEffect) {
coefficients <- summary(model)[["coefficients"]] %>%
as.data.frame() %>%
dplyr::rename(
stdError = `Std. Error`,
t = `t value`,
p = `Pr(>|t|)`) %>%
dplyr::mutate(
Estimate = round(Estimate, digits = 2),
#df = round(df, digits = 2),
t = round(t, digits = 2),
p = round(p, digits = 3),
) %>%
dplyr::filter(rownames(.) == fixedEffect)
if(coefficients$p < .001) {
p <- "p<.001"
} else {
p <- paste0("p=",as.numeric(coefficients$p))
}
df <- as.numeric(model$df.residual)
t <- paste0("t(",df,")=", as.numeric(coefficients$t))
CI_intervals <- stats::confint(model) %>%
as.data.frame() %>%
dplyr::mutate(
ll = round(`2.5 %`, digits = 2),
ul = round(`97.5 %`, digits = 2),
) %>%
dplyr::select(ll, ul) %>%
dplyr::filter(rownames(.) == fixedEffect)
CI <- base::paste0("95% CI [",
as.numeric(CI_intervals$ll),
", ",
as.numeric(CI_intervals$ul),
"]")
formula <- paste(t, p, CI, sep = ", ")
return(formula)
rm(coefficients, t, p, CI_intervals, CI)
}
apa_lmeResults <- function(model, fixedEffect) {
coefficients <- summary(model)[["coefficients"]] %>%
as.data.frame() %>%
dplyr::rename(
stdError = `Std. Error`,
t = `t value`,
p = `Pr(>|t|)`) %>%
dplyr::mutate(
Estimate = round(Estimate, digits = 2),
df = round(df, digits = 2),
t = round(t, digits = 2),
p = round(p, digits = 3),
) %>%
dplyr::filter(rownames(.) == fixedEffect)
if(coefficients$p < .001) {
p <- "p<.001"
} else {
p <- paste0("p=",as.numeric(coefficients$p))
}
t <- paste0("t(",as.numeric(coefficients$df),")=", as.numeric(coefficients$t))
CI_intervals <- stats::confint(model) %>%
as.data.frame() %>%
dplyr::mutate(
ll = round(`2.5 %`, digits = 2),
ul = round(`97.5 %`, digits = 2),
) %>%
dplyr::select(ll, ul) %>%
dplyr::filter(rownames(.) == fixedEffect)
CI <- base::paste0("95% CI [",
as.numeric(CI_intervals$ll),
", ",
as.numeric(CI_intervals$ul),
"]")
formula <- paste(t, p, CI, sep = ", ")
return(formula)
rm(coefficients, t, p, CI_intervals, CI)
}
apa_levelDescriptives <- function(data,level, outcome) {
descriptiveData <- modelData %>%
dplyr::select(Group, Sex, sym(outcome)) %>%
dplyr::rename(outcome = 3)
group <- descriptiveData %>%
dplyr::group_by(Group) %>%
dplyr::summarize(M = mean(outcome, na.rm = T),
SD = sd(outcome, na.rm = T),
.groups = 'drop') %>%
dplyr::mutate(M = round(M, digits = 2),
SD = round(SD, digits = 2)) %>%
dplyr::rename(Grouping = 1) %>%
as.data.frame()
sex <- descriptiveData %>%
dplyr::group_by(Sex) %>%
dplyr::summarize(M = mean(outcome, na.rm = T),
SD = sd(outcome, na.rm = T),
.groups = 'drop') %>%
dplyr::mutate(M = round(M, digits = 2),
SD = round(SD, digits = 2)) %>%
dplyr::rename(Grouping = 1) %>%
as.data.frame()
groupSex <- descriptiveData %>%
dplyr::group_by(Group, Sex) %>%
dplyr::summarize(M = mean(outcome, na.rm = T),
SD = sd(outcome, na.rm = T),
.groups = 'drop') %>%
dplyr::ungroup() %>%
dplyr::mutate(M = round(M, digits = 2),
SD = round(SD, digits = 2),
Grouping = paste(Group, Sex, sep = "_")) %>%
dplyr::select(Grouping, M, SD) %>%
as.data.frame()
descriptives <- rbind(group,
sex,
groupSex) %>%
dplyr::filter(Grouping == level)
output <- paste0(level,": (M=",descriptives$M,", SD=",descriptives$SD,")")
return(output)
rm(descriptives, group, sex, groupSex)
}
apa_emmsPairs <- function(emmsPair, sex, Condition) {
summary_table <- summary(emmsPair, infer = TRUE) %>%
dplyr::filter(Sex == sex) %>%
dplyr::filter(condition == condition)
if(summary_table$p.value < .001) {
p <- "p < .001"
} else {
p <- paste0("p=",
round(summary_table$p.value, digits = 3))
}
output <- paste(
sex,
", HC - PD: (",
"t(",
round(summary_table$df, digits = 2),
")=",
as.numeric(round(summary_table$t.ratio, 2)),
", ",
p,
")",
sep = "")
return(output)
}
apa_s1_emmPairs <- function(emmsPair, sex, Condition) {
summary_table <- summary(emmsPair, infer = TRUE) %>%
dplyr::filter(Sex == sex) %>%
dplyr::filter(condition == Condition)
if(summary_table$p.value < .001) {
p <- "p<.001"
} else {
p <- paste0("p=",
round(summary_table$p.value, digits = 3))
}
output <- paste(
sex,
", HC - PD: (",
"t(",
round(summary_table$df, digits = 2),
")=",
as.numeric(round(summary_table$z.ratio, 2)),
", ",
p,
")",
sep = "")
return(output)
}
# APA Reporting
apa_s1_emmPairs(pairs(emms_group),
sex = "M",
Condition = "conv")
library(tidyverse) # install.packages('tidyverse')
library(emmeans)
library(ggpubr) # install.packages('ggpubr')
library(plyr) # install.packages('plyr')
library(beepr) # install.packages('beepr')
library(plotrix) # install.packages('plotrix')
source('Functions/MSL Tools.R')
# APA Reporting
apa_s1_emmPairs(pairs(emms_group),
sex = "M",
Condition = "conv")
# APA Reporting
apa_s1_emmPairs(pairs(emms_group),
sex = "M",
Condition = "conv")
# APA Reporting
apa_s1_emmPairs(pairs(emms_group),
sex = "F",
Condition = "conv")
# Compute EMMs for Group and Sex
emms_group <- emmeans(AP_finalModel, ~ Group | Sex*condition)
emms_condition <- emmeans(AP_finalModel, ~ condition | Sex*Group)
# APA Reporting
apa_s1_emmPairs(pairs(emms_group),
sex = "F",
Condition = "conv")
# APA Reporting
apa_s1_emmPairs(pairs(emms_group),
sex = "M",
Condition = "conv")
# APA Reporting
apa_s1_emmPairs(pairs(emms_group),
sex = "F",
Condition = "conv")
