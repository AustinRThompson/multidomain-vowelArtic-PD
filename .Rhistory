color = color_HC,
tip_length = 0,
manual = T) +
# Adding significance bars - PD*Condition ----
ggsignif::geom_signif(data = data.frame(Group = c(
"Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(rep(lim_condition_PD_F2, 6)),
xmin = c(
# Male Speakers
1,   # Less Clear -> Conv
2.1, # Conv -> More Clear
NA,  # Padding
# Female Speakers
1,   # Less Clear -> Conv
2.1, # Conv -> More Clear
NA),  # Padding
xmax = c(
# Male Speakers
1.9, # Less Clear -> Conv
2.9, # Conv -> More Clear
NA,  # Padding
# Female Speakers
1.9, # Less Clear -> Conv
2.9, # Conv -> More Clear
NA), # Padding
annotations = c(
# Male Speakers
NA,  # Less Clear -> Conv
NA,  # Conv -> More Clear
NA,  # Padding
# Female Speakers
NA,  # Less Clear -> Conv
"*",  # Conv -> More Clear
NA), # Padding
group=c(1,2,3,4,5,6)),
vjust = .5,
color = color_PD,
tip_length = 0,
manual = T)
plot_F2_Slope
# Acoustic Plots
plot_s2_acoustic <- plot_aVSA + patchwork::plot_spacer() + plot_acoDistance +
plot_F2_Slope + patchwork::plot_spacer() + patchwork::guide_area() +
patchwork::plot_layout(
widths = c(1, -.075, 1),
guides = "collect",
#design = "
#        AABB
#        CCDD"
)
plot_s2_acoustic
dir.create(path = "Plots",
showWarnings = F)
ggsave(filename = "Figure 3_acousticMeasures.png",
plot = plot_s2_acoustic,
path = "Plots",
height = 5,
width = 6.5,
scale = 1)
model <- base::readRDS("Models/kVSA_finalModel.rds") %>%
sjPlot::plot_model(type = "int")
plotData <- model[[4]][["data"]] %>%
as.data.frame() %>%
dplyr::mutate(
condition = factor(x,
levels = c(3, 1, 2),
labels = c("Less\nClear",
"Conv",
"More\nClear")),
facet = factor(facet,
levels = c("M", "F"),
labels = c("Male Speakers", "Female Speakers")))
lim_y_kVSA <- c(0,
(base::max(plotData$conf.high) + base::max(plotData$conf.high)*.45))
lim_group_kVSA <- base::max(plotData$conf.high) + base::max(plotData$conf.high)*.10
lim_condition_HC_kVSA <- base::max(plotData$conf.high) + base::max(plotData$conf.high)*.25
lim_condition_PD_kVSA <- base::max(plotData$conf.high) + base::max(plotData$conf.high)*.40
# Making the Plot
plot_kVSA <- plotData %>%
ggplot() +
aes(y = predicted,
x = condition,
group = group,
color = group) +
# Line
geom_line(
aes(color = group,
group = group),
position = position_dodge(width = .45),
alpha = .6,
) +
# Error Bars
geom_errorbar(aes(
ymin = conf.low,
ymax = conf.high,
color = group,
group = group
),
position = position_dodge(width = .45),
width = 0,
) +
# Point
geom_point(
aes(color = group,
group = group),
position = position_dodge(width = .45)
) +
# Facet by Sex ----
facet_grid(~facet) +
# Changing the y axis scale
coord_cartesian(ylim = lim_y_kVSA) +
# Changing the theme, labels, and title
theme_minimal() +
labs(y = bquote('mm'^2),
color = "Group") +
ggtitle("Kinematic VSA") +
theme(
aspect.ratio = 1.333333,
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
panel.border = element_rect(fill = NA, color = "black"),
) +
# Color Palate
scale_color_manual(values = c(color_HC,color_PD)) +
scale_fill_manual(values = c(color_HC,color_PD))
plot_kVSA
model <- base::readRDS("Models/kinDistance_finalModel.rds") %>%
sjPlot::plot_model(type = "int")
plotData <- model[[4]][["data"]] %>%
as.data.frame() %>%
dplyr::mutate(
condition = factor(x,
levels = c(3, 1, 2),
labels = c("Less\nClear",
"Conv",
"More\nClear")),
facet = factor(facet,
levels = c("M", "F"),
labels = c("Male Speakers", "Female Speakers")))
lim_y_kinDist <- c(0,
(base::max(plotData$conf.high) + base::max(plotData$conf.high)*.45))
lim_group_kinDist <- base::max(plotData$conf.high) + base::max(plotData$conf.high)*.10
lim_condition_HC_kinDist <- base::max(plotData$conf.high) + base::max(plotData$conf.high)*.25
lim_condition_PD_kinDist <- base::max(plotData$conf.high) + base::max(plotData$conf.high)*.40
# Making the Plot
plot_kinDistance <- plotData %>%
ggplot() +
aes(y = predicted,
x = condition,
group = group,
color = group) +
# Line
geom_line(
aes(color = group,
group = group),
position = position_dodge(width = .45),
alpha = .6,
) +
# Error Bars
geom_errorbar(aes(
ymin = conf.low,
ymax = conf.high,
color = group,
group = group
),
position = position_dodge(width = .45),
width = 0,
) +
# Point
geom_point(
aes(color = group,
group = group),
position = position_dodge(width = .45)
) +
# Facet by Sex ----
facet_grid(~facet) +
# Changing the y axis scale
coord_cartesian(ylim = lim_y_kinDist) +
# Changing the theme, labels, and title
theme_minimal() +
labs(y = "mm",
color = "Group") +
ggtitle("Kinematic Distance") +
theme(
aspect.ratio = 1.333333,
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
panel.border = element_rect(fill = NA, color = "black"),
) +
# Color Palate
scale_color_manual(values = c(color_HC,color_PD)) +
scale_fill_manual(values = c(color_HC,color_PD)) +
# Adding significance bars - HC*Condition -----
ggsignif::geom_signif(data = data.frame(Group = c(
"Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(rep(lim_condition_HC_kinDist, 6)),
xmin = c(
# Male Speakers
1,   # Less Clear -> Conv
2.1, # Conv -> More Clear
NA,  # Padding
# Female Speakers
1,   # Less Clear -> Conv
2.1, # Conv -> More Clear
NA),  # Padding
xmax = c(
# Male Speakers
1.9, # Less Clear -> Conv
2.9, # Conv -> More Clear
NA,  # Padding
# Female Speakers
1.9, # Less Clear -> Conv
2.9, # Conv -> More Clear
NA), # Padding
annotations = c(
# Male Speakers
NA,  # Less Clear -> Conv
"*",  # Conv -> More Clear
NA,  # Padding
# Female Speakers
NA,  # Less Clear -> Conv
"*",  # Conv -> More Clear
NA), # Padding
group=c(1,2,3,4,5,6)),
vjust = .5,
color = color_HC,
tip_length = 0,
manual = T) +
# Adding significance bars - PD*Condition ----
ggsignif::geom_signif(data = data.frame(Group = c(
"Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(rep(lim_condition_PD_kinDist, 6)),
xmin = c(
# Male Speakers
1,   # Less Clear -> Conv
2.1, # Conv -> More Clear
NA,  # Padding
# Female Speakers
1,   # Less Clear -> Conv
2.1, # Conv -> More Clear
NA),  # Padding
xmax = c(
# Male Speakers
1.9, # Less Clear -> Conv
2.9, # Conv -> More Clear
NA,  # Padding
# Female Speakers
1.9, # Less Clear -> Conv
2.9, # Conv -> More Clear
NA), # Padding
annotations = c(
# Male Speakers
"*",  # Less Clear -> Conv
"*",  # Conv -> More Clear
NA,  # Padding
# Female Speakers
NA,  # Less Clear -> Conv
"*",  # Conv -> More Clear
NA), # Padding
group=c(1,2,3,4,5,6)),
vjust = .5,
color = color_PD,
tip_length = 0,
manual = T)
plot_kinDistance
model <- base::readRDS("Models/TB_speedMax_finalModel.rds") %>%
sjPlot::plot_model(type = "int")
plotData <- model[[4]][["data"]] %>%
as.data.frame() %>%
dplyr::mutate(
condition = factor(x,
levels = c(3, 1, 2),
labels = c("Less\nClear",
"Conv",
"More\nClear")),
facet = factor(facet,
levels = c("M", "F"),
labels = c("Male Speakers", "Female Speakers")))
lim_y_TB <- c(0,
(base::max(plotData$conf.high) + base::max(plotData$conf.high)*.45))
lim_group_TB <- base::max(plotData$conf.high) + base::max(plotData$conf.high)*.10
lim_condition_HC_TB <- base::max(plotData$conf.high) + base::max(plotData$conf.high)*.25
lim_condition_PD_TB <- base::max(plotData$conf.high) + base::max(plotData$conf.high)*.40
# Making the Plot
plot_TB_Speed <- plotData %>%
ggplot() +
aes(y = predicted,
x = condition,
group = group,
color = group) +
# Line
geom_line(
aes(color = group,
group = group),
position = position_dodge(width = .45),
alpha = .6,
) +
# Error Bars
geom_errorbar(aes(
ymin = conf.low,
ymax = conf.high,
color = group,
group = group
),
position = position_dodge(width = .45),
width = 0,
) +
# Point
geom_point(
aes(color = group,
group = group),
position = position_dodge(width = .45)
) +
# Facet by Sex ----
facet_grid(~facet) +
# Changing the y axis scale
coord_cartesian(ylim = lim_y_TB) +
# Changing the theme, labels, and title
theme_minimal() +
labs(y = "mm/s",
color = "Group") +
ggtitle("Kinematic Speed") +
theme(
aspect.ratio = 1.333333,
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
panel.border = element_rect(fill = NA, color = "black"),
) +
# Color Palate
scale_color_manual(values = c(color_HC,color_PD)) +
scale_fill_manual(values = c(color_HC,color_PD)) +
# Adding significance bars - HC*Condition -----
ggsignif::geom_signif(data = data.frame(Group = c(
"Less\nClear",
"Conv",
"More\nClear")),
aes(y_position = c(rep(lim_condition_HC_TB, 6)),
xmin = c(
# Male Speakers
1,   # Less Clear -> Conv
2.1, # Conv -> More Clear
NA,  # Padding
# Female Speakers
1,   # Less Clear -> Conv
2.1, # Conv -> More Clear
NA),  # Padding
xmax = c(
# Male Speakers
1.9, # Less Clear -> Conv
2.9, # Conv -> More Clear
NA,  # Padding
# Female Speakers
1.9, # Less Clear -> Conv
2.9, # Conv -> More Clear
NA), # Padding
annotations = c(
# Male Speakers
NA,  # Less Clear -> Conv
"*",  # Conv -> More Clear
NA,  # Padding
# Female Speakers
NA,  # Less Clear -> Conv
NA,  # Conv -> More Clear
NA), # Padding
group=c(1,2,3,4,5,6)),
vjust = .5,
color = color_HC,
tip_length = 0,
manual = T)
plot_TB_Speed
# Kinematic Plots
plot_s2_kinematic <- plot_kVSA + patchwork::plot_spacer() + plot_kinDistance +
plot_TB_Speed + patchwork::plot_spacer() + patchwork::guide_area() +
patchwork::plot_layout(
widths = c(1, -.02, 1),
guides = "collect",
#design = "
#        AABB
#        CCDD",
)
plot_s2_kinematic
dir.create(path = "Plots/",
showWarnings = F)
ggsave(filename = "Figure 4_kinematicMeasures.png",
plot = plot_s2_kinematic,
path = "Plots",
height = 5,
width = 6.5,
scale = 1)
library(rcartocolor) # install.packages('rcartocolor')
myPal <- rcartocolor::carto_pal(n = 11, name = "Geyser")[c(2, 3, 4, 5)]
vowels <- rio::import(file = "../Data/PreppedData/CollatedData/allSpeakers_AcousticSegments.csv") %>%
dplyr::filter(phrase == "bsent") %>%
dplyr::group_by(DatabaseID, Group, condition, phrase) %>%
dplyr::mutate(time = time - min(time),
condition = factor(condition,
levels = c(
"lessClear",
"conv",
"moreClear"
),
labels = c(
"Less Clear",
"Conversational",
"More Clear"
)),
label = factor(label,
levels = c(
"ai",
"a",
"i",
"v"
),
labels = c(
"aɪ",
"a",
"i",
"ʌ"
)))
vowelBoundaries <- vowels %>%
dplyr::group_by(DatabaseID, Group, condition, phrase, label, token) %>%
dplyr::summarise(onset = min(time),
offset = max(time)) %>%
dplyr::filter(token != "a.1") %>%
dplyr::filter(token != "ai.1") %>%
dplyr::filter(token != "i.2") %>%
dplyr::filter(token != "i.3") %>%
dplyr::filter(token != "v.1") %>%
dplyr::filter(token != "`") %>%
dplyr::filter(token != "a.3") %>%
dplyr::group_by(condition, phrase, label, token) %>%
dplyr::summarise(onset = mean(onset, na.rm = T),
offset = mean(offset, na.rm = T))
vowelLabels <- vowelBoundaries %>%
dplyr::mutate(midpoint = (offset - onset)/2 + onset)
wordLabels <- vowelLabels %>%
dplyr::filter(condition == "More Clear") %>%
dplyr::mutate(word = case_when(
token == "ai" ~ "Buy",
token == "a" ~ "Bobby",
token == "i" ~ "Bobby",
token == "v" ~ "puppy",
token == "i.1" ~ "puppy"
)) %>%
dplyr::group_by(condition, phrase, word) %>%
dplyr::summarize(midpoint = mean(midpoint)) %>%
dplyr::ungroup() %>%
dplyr::add_row(condition = "More Clear",
phrase = "bsent",
word = "a",
midpoint = mean(x = c(.$midpoint[.$word == "Bobby"],
.$midpoint[.$word == "puppy"]),
na.rm = T))
phraseBoundaries <- vowels %>%
dplyr::group_by(DatabaseID, Group, condition, phrase) %>%
dplyr::summarise(onset = min(time),
offset = max(time)) %>%
dplyr::group_by(condition, phrase) %>%
dplyr::summarise(onset = mean(onset, na.rm = T),
offset = mean(offset, na.rm = T)) %>%
tidyr::pivot_longer(names_to = "timePoint",
values_to = "time",
cols = c(onset, offset))
phraseBoundaries %>%
ggplot() +
aes(x = time,
y = condition) +
geom_line(linetype = 2) +
# Adding the vowels
geom_segment(data = vowelBoundaries,
aes(x = onset, xend = offset,
y = condition, yend = condition,
color = label,
group = condition),
size = 10,
lineend = "butt",
show.legend = F) +
# Vowel Labels
geom_text(data = vowelLabels,
aes(x = midpoint,
y = condition,
label = label),
show.legend = F) +
# Word Labels
geom_text(data = wordLabels,
aes(x = midpoint,
y = condition,
label = word),
nudge_y = .5,
show.legend = F) +
labs(x = "Time (s, Normalized)",
y = NULL) +
theme_classic() +
scale_color_manual(values = myPal)
ggsave(filename = "Figure 6_Relative Vowel Duations.png",
plot = last_plot(),
path = "Plots/",
height = 4,
width = 6,
scale = .9)
