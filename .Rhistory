Group,
", ",
Contrast
": (",
apa_s2_emmPairs <- function(emmsPair, sex, Group, Contrast) {
summary_table <- summary(emmsPair, infer = TRUE) %>%
dplyr::filter(Sex == sex) %>%
dplyr::filter(Group == Group) %>%
dplyr::filter(Contrast == Contrast)
if(summary_table$p.value < .001) {
p <- "p<.001"
} else {
p <- paste0("p=",
round(summary_table$p.value, digits = 3))
}
if("t.ratio" %in% colnames(summary_table)) {
output <- paste(
sex,
", ",
Group,
", ",
Contrast,
": (",
"t(",
round(summary_table$df, digits = 2),
")=",
as.numeric(round(summary_table$t.ratio, 2)),
", ",
p,
")",
sep = "")
}
if("z.ratio" %in% colnames(summary_table)) {
output <- paste(
sex,
", ",
Group,
", ",
Contrast,
": (",
"z = (",
as.numeric(round(summary_table$z.ratio, 2)),
", ",
p,
")",
sep = "")
}
return(output)
}
apa_s2_emmPairs(pairs(emms_condition),
sex = "M",
Group = "HC",
Contrast = "conv - moreClear")
apa_s2_emmPairs
apa_s2_emmPairs <- function(emmsPair, sex, Group, Contrast) {
summary_table <- summary(emmsPair, infer = TRUE) %>%
dplyr::filter(Sex == sex) %>%
dplyr::filter(Group == Group) %>%
dplyr::filter(Contrast == Contrast)
if(summary_table$p.value < .001) {
p <- "p<.001"
} else {
p <- paste0("p=",
round(summary_table$p.value, digits = 3))
}
if("t.ratio" %in% colnames(summary_table)) {
output <- paste(
sex,
", ",
Group,
", ",
Contrast,
": (",
"t(",
round(summary_table$df, digits = 2),
")=",
as.numeric(round(summary_table$t.ratio, 2)),
", ",
p,
")",
sep = "")
}
if("z.ratio" %in% colnames(summary_table)) {
output <- paste(
sex,
", ",
Group,
", ",
Contrast,
": (",
"z = (",
as.numeric(round(summary_table$z.ratio, 2)),
", ",
p,
")",
sep = "")
}
return(output)
}
apa_s2_emmPairs(pairs(emms_condition),
sex = "M",
Group = "HC",
Contrast = "conv - moreClear")
pairs(emms_condition)
t <- pairs(emms_condition)
View(t)
t <- summary(pairs(emms_condition))
apa_s2_emmPairs <- function(emmsPair, sex, Group, Contrast) {
summary_table <- summary(emmsPair, infer = TRUE) %>%
dplyr::filter(Sex == sex) %>%
dplyr::filter(Group == Group) %>%
dplyr::filter(contrast == Contrast)
if(summary_table$p.value < .001) {
p <- "p<.001"
} else {
p <- paste0("p=",
round(summary_table$p.value, digits = 3))
}
if("t.ratio" %in% colnames(summary_table)) {
output <- paste(
sex,
", ",
Group,
", ",
Contrast,
": (",
"t(",
round(summary_table$df, digits = 2),
")=",
as.numeric(round(summary_table$t.ratio, 2)),
", ",
p,
")",
sep = "")
}
if("z.ratio" %in% colnames(summary_table)) {
output <- paste(
sex,
", ",
Group,
", ",
Contrast,
": (",
"z = (",
as.numeric(round(summary_table$z.ratio, 2)),
", ",
p,
")",
sep = "")
}
return(output)
}
apa_s2_emmPairs(pairs(emms_condition),
sex = "M",
Group = "HC",
Contrast = "conv - moreClear")
apa_s2_emmPairs(pairs(emms_condition),
sex = "M",
Group = "HC",
contrast = "conv - moreClear")
apa_s2_emmPairs(pairs(emms_condition),
sex = "M",
Group = "HC",
Contrast = "conv - moreClear")
apa_s2_emmPairs <- function(emmsPair, sex, group, Contrast) {
summary_table <- summary(emmsPair, infer = TRUE) %>%
dplyr::filter(Sex == sex) %>%
dplyr::filter(Group == group) %>%
dplyr::filter(contrast == Contrast)
if(summary_table$p.value < .001) {
p <- "p<.001"
} else {
p <- paste0("p=",
round(summary_table$p.value, digits = 3))
}
if("t.ratio" %in% colnames(summary_table)) {
output <- paste(
sex,
", ",
group,
", ",
Contrast,
": (",
"t(",
round(summary_table$df, digits = 2),
")=",
as.numeric(round(summary_table$t.ratio, 2)),
", ",
p,
")",
sep = "")
}
if("z.ratio" %in% colnames(summary_table)) {
output <- paste(
sex,
", ",
group,
", ",
Contrast,
": (",
"z = (",
as.numeric(round(summary_table$z.ratio, 2)),
", ",
p,
")",
sep = "")
}
return(output)
}
apa_s2_emmPairs(pairs(emms_condition),
sex = "M",
Group = "HC",
Contrast = "conv - moreClear")
summary_table <- summary(emmsPair, infer = TRUE) %>%
dplyr::filter(Sex == Sex_Input) %>%
dplyr::filter(Group == Group_Input) %>%
dplyr::filter(contrast == Contrast_Input)
apa_s2_emmPairs <- function(emmsPair, Sex_Input, Group_Input, Contrast_Input) {
summary_table <- summary(emmsPair, infer = TRUE) %>%
dplyr::filter(Sex == Sex_Input) %>%
dplyr::filter(Group == Group_Input) %>%
dplyr::filter(contrast == Contrast_Input)
if(summary_table$p.value < .001) {
p <- "p<.001"
} else {
p <- paste0("p=",
round(summary_table$p.value, digits = 3))
}
if("t.ratio" %in% colnames(summary_table)) {
output <- paste(
Sex_Input,
", ",
Group_Input,
", ",
Contrast_Input,
": (",
"t(",
round(summary_table$df, digits = 2),
")=",
as.numeric(round(summary_table$t.ratio, 2)),
", ",
p,
")",
sep = "")
}
if("z.ratio" %in% colnames(summary_table)) {
output <- paste(
Sex_Input,
", ",
Group_Input,
", ",
Contrast_Input,
": (",
"z = (",
as.numeric(round(summary_table$z.ratio, 2)),
", ",
p,
")",
sep = "")
}
return(output)
}
apa_s2_emmPairs(pairs(emms_condition),
sex = "M",
Group = "HC",
Contrast = "conv - moreClear")
apa_s2_emmPairs(pairs(emms_condition),
Sex_Input = "M",
Group_Input = "HC",
Contrast_Input = "conv - moreClear")
apa_lmResults <- function(model, fixedEffect) {
coefficients <- summary(model)[["coefficients"]] %>%
as.data.frame() %>%
dplyr::rename(
stdError = `Std. Error`,
t = `t value`,
p = `Pr(>|t|)`) %>%
dplyr::mutate(
Estimate = round(Estimate, digits = 2),
#df = round(df, digits = 2),
t = round(t, digits = 2),
p = round(p, digits = 3),
) %>%
dplyr::filter(rownames(.) == fixedEffect)
if(coefficients$p < .001) {
p <- "p<.001"
} else {
p <- paste0("p=",as.numeric(coefficients$p))
}
df <- as.numeric(model$df.residual)
t <- paste0("t(",df,")=", as.numeric(coefficients$t))
CI_intervals <- stats::confint(model) %>%
as.data.frame() %>%
dplyr::mutate(
ll = round(`2.5 %`, digits = 2),
ul = round(`97.5 %`, digits = 2),
) %>%
dplyr::select(ll, ul) %>%
dplyr::filter(rownames(.) == fixedEffect)
CI <- base::paste0("95% CI [",
as.numeric(CI_intervals$ll),
", ",
as.numeric(CI_intervals$ul),
"]")
formula <- paste(t, p, CI, sep = ", ")
return(formula)
rm(coefficients, t, p, CI_intervals, CI)
}
apa_lmeResults <- function(model, fixedEffect) {
coefficients <- summary(model)[["coefficients"]] %>%
as.data.frame() %>%
dplyr::rename(
stdError = `Std. Error`,
t = `t value`,
p = `Pr(>|t|)`) %>%
dplyr::mutate(
Estimate = round(Estimate, digits = 2),
df = round(df, digits = 2),
t = round(t, digits = 2),
p = round(p, digits = 3),
) %>%
dplyr::filter(rownames(.) == fixedEffect)
if(coefficients$p < .001) {
p <- "p<.001"
} else {
p <- paste0("p=",as.numeric(coefficients$p))
}
t <- paste0("t(",as.numeric(coefficients$df),")=", as.numeric(coefficients$t))
CI_intervals <- stats::confint(model) %>%
as.data.frame() %>%
dplyr::mutate(
ll = round(`2.5 %`, digits = 2),
ul = round(`97.5 %`, digits = 2),
) %>%
dplyr::select(ll, ul) %>%
dplyr::filter(rownames(.) == fixedEffect)
CI <- base::paste0("95% CI [",
as.numeric(CI_intervals$ll),
", ",
as.numeric(CI_intervals$ul),
"]")
formula <- paste(t, p, CI, sep = ", ")
return(formula)
rm(coefficients, t, p, CI_intervals, CI)
}
apa_levelDescriptives <- function(data,level, outcome) {
descriptiveData <- modelData %>%
dplyr::select(Group, Sex, sym(outcome)) %>%
dplyr::rename(outcome = 3)
group <- descriptiveData %>%
dplyr::group_by(Group) %>%
dplyr::summarize(M = mean(outcome, na.rm = T),
SD = sd(outcome, na.rm = T),
.groups = 'drop') %>%
dplyr::mutate(M = round(M, digits = 2),
SD = round(SD, digits = 2)) %>%
dplyr::rename(Grouping = 1) %>%
as.data.frame()
sex <- descriptiveData %>%
dplyr::group_by(Sex) %>%
dplyr::summarize(M = mean(outcome, na.rm = T),
SD = sd(outcome, na.rm = T),
.groups = 'drop') %>%
dplyr::mutate(M = round(M, digits = 2),
SD = round(SD, digits = 2)) %>%
dplyr::rename(Grouping = 1) %>%
as.data.frame()
groupSex <- descriptiveData %>%
dplyr::group_by(Group, Sex) %>%
dplyr::summarize(M = mean(outcome, na.rm = T),
SD = sd(outcome, na.rm = T),
.groups = 'drop') %>%
dplyr::ungroup() %>%
dplyr::mutate(M = round(M, digits = 2),
SD = round(SD, digits = 2),
Grouping = paste(Group, Sex, sep = "_")) %>%
dplyr::select(Grouping, M, SD) %>%
as.data.frame()
descriptives <- rbind(group,
sex,
groupSex) %>%
dplyr::filter(Grouping == level)
output <- paste0(level,": (M=",descriptives$M,", SD=",descriptives$SD,")")
return(output)
rm(descriptives, group, sex, groupSex)
}
apa_emmsPairs <- function(emmsPair, sex, Condition) {
summary_table <- summary(emmsPair, infer = TRUE) %>%
dplyr::filter(Sex == sex) %>%
dplyr::filter(condition == condition)
if(summary_table$p.value < .001) {
p <- "p < .001"
} else {
p <- paste0("p=",
round(summary_table$p.value, digits = 3))
}
if("t.ratio" %in% colnames(summary_table)) {
output <- paste(
sex,
", HC - PD: (",
"t(",
round(summary_table$df, digits = 2),
")=",
as.numeric(round(summary_table$t.ratio, 2)),
", ",
p,
")",
sep = "")
}
if("z.ratio" %in% colnames(summary_table)) {
output <- paste(
sex,
", HC - PD: (",
"z = (",
as.numeric(round(summary_table$z.ratio, 2)),
", ",
p,
")",
sep = "")
}
return(output)
}
apa_s1_emmPairs <- function(emmsPair, sex, Condition) {
summary_table <- summary(emmsPair, infer = TRUE) %>%
dplyr::filter(Sex == sex) %>%
dplyr::filter(condition == Condition)
if(summary_table$p.value < .001) {
p <- "p<.001"
} else {
p <- paste0("p=",
round(summary_table$p.value, digits = 3))
}
if("t.ratio" %in% colnames(summary_table)) {
output <- paste(
sex,
", HC - PD: (",
"t(",
round(summary_table$df, digits = 2),
")=",
as.numeric(round(summary_table$t.ratio, 2)),
", ",
p,
")",
sep = "")
}
if("z.ratio" %in% colnames(summary_table)) {
output <- paste(
sex,
", HC - PD: (",
"z=",
as.numeric(round(summary_table$z.ratio, 2)),
", ",
p,
")",
sep = "")
}
return(output)
}
apa_s2_emmPairs <- function(emmsPair, Sex_Input, Group_Input, Contrast_Input) {
summary_table <- summary(emmsPair, infer = TRUE) %>%
dplyr::filter(Sex == Sex_Input) %>%
dplyr::filter(Group == Group_Input) %>%
dplyr::filter(contrast == Contrast_Input)
if(summary_table$p.value < .001) {
p <- "p<.001"
} else {
p <- paste0("p=",
round(summary_table$p.value, digits = 3))
}
if("t.ratio" %in% colnames(summary_table)) {
output <- paste(
Sex_Input,
", ",
Group_Input,
", ",
Contrast_Input,
": (",
"t(",
round(summary_table$df, digits = 2),
")=",
as.numeric(round(summary_table$t.ratio, 2)),
", ",
p,
")",
sep = "")
}
if("z.ratio" %in% colnames(summary_table)) {
output <- paste(
Sex_Input,
", ",
Group_Input,
", ",
Contrast_Input,
": (",
"z=",
as.numeric(round(summary_table$z.ratio, 2)),
", ",
p,
")",
sep = "")
}
return(output)
}
apa_s2_emmPairs(pairs(emms_condition),
Sex_Input = "M",
Group_Input = "HC",
Contrast_Input = "conv - moreClear")
apa_s2_emmPairs(pairs(emms_condition),
Sex_Input = "F",
Group_Input = "HC",
Contrast_Input = "conv - moreClear")
0.003 < alpha_s1
