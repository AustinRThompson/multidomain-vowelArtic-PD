sex <- descriptiveData %>%
dplyr::group_by(Sex) %>%
dplyr::summarize(M = mean(outcome, na.rm = T),
SD = sd(outcome, na.rm = T),
.groups = 'drop') %>%
dplyr::mutate(M = round(M, digits = 2),
SD = round(SD, digits = 2)) %>%
dplyr::rename(Grouping = 1) %>%
as.data.frame()
groupSex <- descriptiveData %>%
dplyr::group_by(Group, Sex) %>%
dplyr::summarize(M = mean(outcome, na.rm = T),
SD = sd(outcome, na.rm = T),
.groups = 'drop') %>%
dplyr::ungroup() %>%
dplyr::mutate(M = round(M, digits = 2),
SD = round(SD, digits = 2),
Grouping = paste(Group, Sex, sep = "_")) %>%
dplyr::select(Grouping, M, SD) %>%
as.data.frame()
descriptives <- rbind(group,
sex,
groupSex) %>%
dplyr::filter(Grouping == level)
output <- paste0(level,": (M=",descriptives$M,", SD=",descriptives$SD,")")
return(output)
rm(descriptives, group, sex, groupSex)
}
apa_emmsPairs <- function(emmsPair, sex) {
summary_table <- summary(emmsPair, infer = TRUE) %>%
dplyr::filter(Sex == sex)
if(summary_table$p.value < .001) {
p <- "p < .001"
} else {
p <- paste0("p=",
round(summary_table$p.value, digits = 3))
}
output <- paste(
sex,
", HC - PD: (",
"t(",
round(summary_table$df, digits = 2),
")=",
as.numeric(round(summary_table$t.ratio, 2)),
", ",
p,
")",
sep = "")
return(output)
}
perceptualMeasures <- rio::import(file = "Data/PreppedData/ListenerData/ListenerRatings_allRatings.csv") %>%
dplyr::select(!V1) %>%
dplyr::filter(ratingType == "Int") %>%
dplyr::rename(Int = Rating) %>%
dplyr::mutate(Sex = factor(Sex, levels = c("M","F")),
condition = factor(condition,
levels = c("conv",
"moreClear",
"lessClear")))
modelData <- perceptualMeasures
# Taking out the trash
rm(perceptualMeasures)
# Building the model
Int_m0 <- lmerTest::lmer(Int ~ 1 +
(1 | ListenerID) +
(1 | StudyID),
data = modelData)
# Model summary
summary(Int_m0)
# Building the model
Int_m1 <- lmerTest::lmer(Int ~ condition +
(1 | ListenerID) +
(1 | StudyID),
data = modelData)
# Model summary
summary(Int_m1)
# Perform likelihood ratio test
anova(Int_m0, Int_m1)
# Print the APA 7 Results
apa_lmeResults(Int_m1, "(Intercept)")
apa_levelDescriptives(modelData, "HC", outcome= "Int")
apa_levelDescriptives(modelData, "PD", outcome= "Int")
# Model summary
summary(Int_m1)
# Perform likelihood ratio test
anova(Int_m0, Int_m1)
# Model summary
summary(Int_m1)
# Building the model
Int_m2 <- lmerTest::lmer(Int ~
condition*Group +
(1 | ListenerID) +
(1 | StudyID),
data = modelData)
# Model summary
summary(Int_m2)
# Perform likelihood ratio test
anova(Int_m1, Int_m2)
# Print the APA 7 Results
#apa_lmeResults(Int_m2, "SexF")
apa_levelDescriptives(modelData, "F", outcome= "Int")
apa_levelDescriptives(modelData, "M", outcome= "Int")
# Building the model
Int_m3 <- lmerTest::lmer(Int ~ condition*Group*Sex +
(1 | ListenerID) +
(1 | StudyID),
data = modelData)
# Model summary
summary(Int_m3)
# Perform likelihood ratio test
anova(Int_m2, Int_m3)
emms_Group_sexCondition <- emmeans(Int_m3, ~ Group | Sex*condition)
emms_condition <- emmeans(Int_m3, ~ condition | Sex*Group)
# Compare EMMs
pairs(emms_Group_sexCondition)
summary(emms_Group_sexCondition)
pairs(emms_condition)
apaResults(Int_m3, "GroupPD:SexF")
apa_levelDescriptives(modelData, "PD_M", outcome= "Int")
apa_levelDescriptives(modelData, "HC_M", outcome= "Int")
apa_emmsPairs(pairs(emms_sexGroup), "M")
pairs(emms_condition)
Int_finalModel <- Int_m3
summary(Int_finalModel)
# Compute EMMs for Group and Sex
emms_group <- emmeans(Int_finalModel, ~ Group | Sex*condition)
emms_condition <- emmeans(Int_finalModel, ~ condition | Sex*Group)
# Compare EMMs for Group and Sex
pairs(emms_group)
pairs(emms_condition)
# Saving the model
base::saveRDS(
object = Int_finalModel,
file = "Data/Models/Study 1/Int_finalModel.rds")
# Taking out the trash
rm(list=ls(pattern="^Int_m"))
rm(list=ls(pattern="^emms_"))
rm(modelData)
perceptualMeasures <- rio::import(file = "Data/PreppedData/ListenerData/ListenerRatings_allRatings.csv") %>%
dplyr::select(!V1) %>%
#dplyr::filter(condition == "conv") %>%
dplyr::filter(ratingType == "AP") %>%
dplyr::rename(AP = Rating) %>%
dplyr::mutate(Sex = factor(Sex, levels = c("M","F")),
condition = factor(condition,
levels = c("conv",
"moreClear",
"lessClear")))
modelData <- perceptualMeasures
# Taking out the trash
rm(perceptualMeasures)
# Building the model
AP_m0 <- lmerTest::lmer(AP ~ 1 +
(1 | ListenerID) +
(1 | StudyID),
data = modelData)
# Model summary
summary(AP_m0)
# Building the model
AP_m1 <- lmerTest::lmer(AP ~ condition +
(1 | ListenerID) +
(1 | StudyID),
data = modelData)
# Model summary
summary(AP_m1)
# Perform likelihood ratio test
anova(AP_m0, AP_m1)
# Building the model
AP_m2 <- lmerTest::lmer(AP ~
condition*Group +
(1 | ListenerID) +
(1 | StudyID),
data = modelData)
# Model summary
summary(AP_m2)
# Perform likelihood ratio test
anova(AP_m1, AP_m2)
# Building the model
AP_m3 <- lmerTest::lmer(AP ~ condition*Group*Sex +
(1 | ListenerID) +
(1 | StudyID),
data = modelData)
# Model summary
summary(AP_m3)
# Perform likelihood ratio test
anova(AP_m2, AP_m3)
AP_finalModel <- AP_m3
summary(AP_finalModel)
# Compute EMMs for Group and Sex
emms_group <- emmeans(AP_finalModel, ~ Group | Sex*condition)
emms_condition <- emmeans(AP_finalModel, ~ condition | Sex*Group)
# Compare EMMs for Group and Sex
pairs(emms_group)
0.0009 < alpha_s1
0.0031 < alpha_s1
AP_finalModel <- AP_m3
summary(AP_finalModel)
# Compute EMMs for Group and Sex
emms_group <- emmeans(AP_finalModel, ~ Group | Sex*condition)
emms_condition <- emmeans(AP_finalModel, ~ condition | Sex*Group)
# Compare EMMs for Group and Sex
pairs(emms_group)
pairs(emms_condition)
# Saving the model
base::saveRDS(
object = AP_finalModel,
file = "Data/Models/Study 1/AP_finalModel.rds")
# Taking out the trash
rm(list=ls(pattern="^AP_m"))
rm(list=ls(pattern="^emms"))
rm(modelData)
vsaMeasures <- rio::import(file = "Data/PreppedData/CollatedData/TargetMeasures_vsaMeasures.csv") %>%
#dplyr::filter(condition == "conv") %>%
dplyr::mutate(Sex = factor(Sex, levels = c("M","F")),
condition = factor(condition,
levels = c("conv",
"moreClear",
"lessClear")),
aVSA = aVSA/1000)
modelData <- vsaMeasures
# Taking out the trash
rm(vsaMeasures)
# Building the model
aVSA_m0 <- stats::lm(aVSA ~ 1,
data = modelData)
# Model summary
summary(aVSA_m0)
# Building the model
aVSA_m1 <- stats::lm(aVSA ~ condition,
data = modelData)
# Model summary
summary(aVSA_m1)
# Perform likelihood ratio test
anova(aVSA_m0, aVSA_m1)
# Building the model
aVSA_m2 <- stats::lm(aVSA ~ condition*Group,
data = modelData)
# Model summary
summary(aVSA_m2)
# Perform likelihood ratio test
anova(aVSA_m1, aVSA_m2)
# Building the model
aVSA_m3 <- stats::lm(aVSA ~ condition*Group*Sex,
data = modelData)
# Model summary
summary(aVSA_m3)
# Perform likelihood ratio test
anova(aVSA_m2, aVSA_m3)
# Building the model
aVSA_m0 <- lmerTest::lmer(aVSA ~ 1 +
(1 | StudyID),
data = modelData)
# Model summary
summary(aVSA_m0)
# Building the model
aVSA_m1 <- lmerTest::lmer(aVSA ~ condition +
(1 | StudyID),
data = modelData)
# Model summary
summary(aVSA_m1)
# Building the model
aVSA_m1 <- lmerTest::lmer(aVSA ~ condition +
(1 | StudyID),
data = modelData)
# Model summary
summary(aVSA_m1)
# Perform likelihood ratio test
anova(aVSA_m0, aVSA_m1)
View(modelData)
# Building the model
aVSA_m1 <- lmerTest::lmer(aVSA ~ condition +
(1 | StudyID),
data = modelData)
# Model summary
summary(aVSA_m1)
# Perform likelihood ratio test
anova(aVSA_m0, aVSA_m1)
# Building the model
aVSA_m2 <- lmerTest::lmer(aVSA ~ condition*Group +
(1 | StudyID),
data = modelData)
# Model summary
summary(aVSA_m2)
# Building the model
aVSA_m2 <- lmerTest::lmer(aVSA ~ condition*Group +
(1 | StudyID),
data = modelData)
# Model summary
summary(aVSA_m2)
# Perform likelihood ratio test
anova(aVSA_m1, aVSA_m2)
# Building the model
aVSA_m3 <- lmerTest::lmer(aVSA ~ condition*Group*Sex +
(1 | StudyID),
data = modelData)
# Model summary
summary(aVSA_m3)
# Building the model
aVSA_m3 <- lmerTest::lmer(aVSA ~ condition*Group*Sex +
(1 | StudyID),
data = modelData)
# Model summary
summary(aVSA_m3)
# Perform likelihood ratio test
anova(aVSA_m2, aVSA_m3)
aVSA_finalModel <- aVSA_m3
summary(aVSA_finalModel)
# Compute EMMs for Group and Sex
emms_group <- emmeans(aVSA_finalModel, ~ Group | condition)
emms_condition <- emmeans(aVSA_finalModel, ~ condition | Group)
# Compare EMMs for Group and Sex
pairs(emms_group)
0.0019 < alpha_s1
0.0344 < alpha_s1
# Compute EMMs for Group and Sex
emms_group <- emmeans(aVSA_finalModel, ~ Group | Sex*condition)
emms_condition <- emmeans(aVSA_finalModel, ~ condition | Sex*Group)
# Compare EMMs for Group and Sex
pairs(emms_group)
0.0175 < alpha_s1
0.0036 < alpha_s1
aiMeasures <- rio::import(file = "Data/PreppedData/CollatedData/TargetMeasures_aiMeasures.csv") %>%
#dplyr::filter(condition == "conv") %>%
dplyr::mutate(Sex = factor(Sex, levels = c("M","F")),
condition = factor(condition,
levels = c("conv",
"moreClear",
"lessClear")))
modelData <- aiMeasures
# Taking out the trash
rm(aiMeasures)
# Building the model
acoDistance_m0 <- lmerTest::lmer(acoDistance ~ 1 +
(1 | StudyID),
data = modelData)
# Model summary
summary(acoDistance_m0)
# Building the model
acoDistance_m1 <- lmerTest::lmer(acoDistance ~ condition +
(1 | StudyID),
data = modelData)
# Model summary
summary(acoDistance_m1)
# Perform likelihood ratio test
anova(acoDistance_m0, acoDistance_m1)
# Building the model
acoDistance_m2 <- lmerTest::lmer(acoDistance ~ condition*Group +
(1 | StudyID),
data = modelData)
# Model summary
summary(acoDistance_m2)
# Perform likelihood ratio test
anova(acoDistance_m1, acoDistance_m2)
# Building the model
acoDistance_m3 <- lmerTest::lmer(acoDistance ~ condition*Group*Sex +
(1 | StudyID),
data = modelData)
# Model summary
summary(acoDistance_m3)
# Perform likelihood ratio test
anova(acoDistance_m2, acoDistance_m3)
acoDistance_finalModel <- acoDistance_m3
summary(acoDistance_finalModel)
# Compute EMMs for Group and Sex
emms_group <- emmeans(acoDistance_finalModel, ~ Group | Sex*condition)
emms_condition <- emmeans(acoDistance_finalModel, ~ condition | Sex*Group)
# Compare EMMs for Group and Sex
pairs(emms_group)
pairs(emms_condition)
# Saving the model
base::saveRDS(
object = acoDistance_finalModel,
file = "Data/Models/Study 1/acoDistance_finalModel.rds")
# Taking out the trash
rm(list=ls(pattern="^acoDistance_m"))
rm(list=ls(pattern="^emms"))
rm(modelData)
aiMeasures <- rio::import(file = "Data/PreppedData/CollatedData/TargetMeasures_aiMeasures.csv") %>%
dplyr::filter(condition == "conv") %>%
dplyr::mutate(Sex = factor(Sex, levels = c("M","F")))
modelData <- aiMeasures
# Taking out the trash
rm(aiMeasures)
aiMeasures <- rio::import(file = "Data/PreppedData/CollatedData/TargetMeasures_aiMeasures.csv") %>%
dplyr::filter(condition == "conv") %>%
dplyr::mutate(Sex = factor(Sex, levels = c("M","F")))
modelData <- aiMeasures
# Taking out the trash
rm(aiMeasures)
# Building the model
F2_Slope_m0 <- lmerTest::lmer(F2_Slope ~ 1 +
(1 | StudyID),
data = modelData)
# Model summary
summary(F2_Slope_m0)
# Building the model
F2_Slope_m1 <- lmerTest::lmer(F2_Slope ~ condition +
(1 | StudyID),
data = modelData)
View(modelData)
# Building the model
F2_Slope_m1 <- lmerTest::lmer(F2_Slope ~ condition +
(1 | StudyID),
data = modelData)
# Building the model
F2_Slope_m1 <- lmerTest::lmer(F2_Slope ~ 1 +
(1 | StudyID),
data = modelData)
# Model summary
summary(F2_Slope_m1)
aiMeasures <- rio::import(file = "Data/PreppedData/CollatedData/TargetMeasures_aiMeasures.csv") %>%
dplyr::mutate(Sex = factor(Sex, levels = c("M","F")))
modelData <- aiMeasures
# Taking out the trash
rm(aiMeasures)
# Building the model
F2_Slope_m0 <- lmerTest::lmer(F2_Slope ~ 1 +
(1 | StudyID),
data = modelData)
# Model summary
summary(F2_Slope_m0)
# Building the model
F2_Slope_m1 <- lmerTest::lmer(F2_Slope ~ condition +
(1 | StudyID),
data = modelData)
# Model summary
summary(F2_Slope_m1)
# Perform likelihood ratio test
anova(F2_Slope_m0, F2_Slope_m1)
# Print the APA 7 Results
apa_lmeResults(F2_Slope_m1, "GroupPD")
# Building the model
F2_Slope_m1 <- lmerTest::lmer(F2_Slope ~ condition +
(1 | StudyID),
data = modelData)
# Model summary
summary(F2_Slope_m1)
# Perform likelihood ratio test
anova(F2_Slope_m0, F2_Slope_m1)
# Building the model
F2_Slope_m2 <- lmerTest::lmer(F2_Slope ~ condition*Group +
(1 | StudyID),
data = modelData)
# Model summary
summary(F2_Slope_m2)
# Perform likelihood ratio test
anova(F2_Slope_m1, F2_Slope_m2)
# Building the model
F2_Slope_m3 <- lmerTest::lmer(F2_Slope ~ condition*Group*Sex +
(1 | StudyID),
data = modelData)
# Model summary
summary(F2_Slope_m3)
# Perform likelihood ratio test
anova(F2_Slope_m2, F2_Slope_m3)
F2_Slope_finalModel <- F2_Slope_m3
summary(F2_Slope_finalModel)
# Saving the model
base::saveRDS(
object = F2_Slope_finalModel,
file = "Data/Models/Study 1/F2_Slope_finalModel.rds")
# Taking out the trash
rm(list=ls(pattern="^F2_Slope_m"))
rm(list=ls(pattern="^emms"))
rm(modelData)
vsaMeasures <- rio::import(file = "Data/PreppedData/CollatedData/TargetMeasures_vsaMeasures.csv") %>%
dplyr::mutate(Sex = factor(Sex, levels = c("M","F")))
modelData <- vsaMeasures
# Taking out the trash
rm(vsaMeasures)
# Building the model
kVSA_m0 <- stats::lm(kVSA ~ 1,
data = modelData)
# Model summary
summary(kVSA_m0)
# Building the model
kVSA_m1 <- stats::lm(kVSA ~ condition,
data = modelData)
# Model summary
summary(kVSA_m1)
# Perform likelihood ratio test
anova(kVSA_m0, kVSA_m1)
# Building the model
kVSA_m2 <- stats::lm(kVSA ~ condition*Group,
data = modelData)
# Model summary
summary(kVSA_m2)
# Perform likelihood ratio test
anova(kVSA_m1, kVSA_m2)
# Building the model
kVSA_m3 <- stats::lm(kVSA ~ condition*Group*Sex,
data = modelData)
# Model summary
summary(kVSA_m3)
# Perform likelihood ratio test
anova(kVSA_m2, kVSA_m3)
kVSA_finalModel <- kVSA_m1
summary(kVSA_finalModel)
# Saving the model
base::saveRDS(
object = kVSA_finalModel,
file = "Data/Models/Study 1/kVSA_finalModel.rds")
# Taking out the trash
rm(list=ls(pattern="^kVSA_m"))
rm(list=ls(pattern="^emms"))
rm(modelData)
aiMeasures <- rio::import(file = "Data/PreppedData/CollatedData/TargetMeasures_aiMeasures.csv") %>%
dplyr::mutate(Sex = factor(Sex, levels = c("M","F")))
modelData <- aiMeasures
# Taking out the trash
rm(aiMeasures)
View(modelData)
